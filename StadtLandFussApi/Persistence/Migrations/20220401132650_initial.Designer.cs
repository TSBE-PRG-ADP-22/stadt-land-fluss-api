// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using StadtLandFussApi.Persistence;

#nullable disable

namespace StadtLandFussApi.Persistence.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20220401132650_initial")]
    partial class initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("StadtLandFussApi.Models.Answer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("integer")
                        .HasColumnName("category_id");

                    b.Property<int>("Downvotes")
                        .HasColumnType("integer")
                        .HasColumnName("downvotes");

                    b.Property<string>("Key")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("key");

                    b.Property<int>("UserId")
                        .HasColumnType("integer")
                        .HasColumnName("user_id");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("value");

                    b.HasKey("Id")
                        .HasName("pk_answers");

                    b.HasIndex("CategoryId")
                        .HasDatabaseName("ix_answers_category_id");

                    b.HasIndex("UserId")
                        .HasDatabaseName("ix_answers_user_id");

                    b.ToTable("answers", (string)null);
                });

            modelBuilder.Entity("StadtLandFussApi.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("LobbyId")
                        .HasColumnType("integer")
                        .HasColumnName("lobby_id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("pk_categories");

                    b.HasIndex("LobbyId")
                        .HasDatabaseName("ix_categories_lobby_id");

                    b.ToTable("categories", (string)null);
                });

            modelBuilder.Entity("StadtLandFussApi.Models.Lobby", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("code");

                    b.Property<int>("Rounds")
                        .HasColumnType("integer")
                        .HasColumnName("rounds");

                    b.Property<int>("Status")
                        .HasColumnType("integer")
                        .HasColumnName("status");

                    b.Property<int>("Timelimit")
                        .HasColumnType("integer")
                        .HasColumnName("timelimit");

                    b.HasKey("Id")
                        .HasName("pk_lobbies");

                    b.ToTable("lobbies", (string)null);
                });

            modelBuilder.Entity("StadtLandFussApi.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("Admin")
                        .HasColumnType("boolean")
                        .HasColumnName("admin");

                    b.Property<string>("Guid")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("guid");

                    b.Property<int>("LobbyId")
                        .HasColumnType("integer")
                        .HasColumnName("lobby_id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("pk_users");

                    b.HasIndex("LobbyId")
                        .HasDatabaseName("ix_users_lobby_id");

                    b.ToTable("users", (string)null);
                });

            modelBuilder.Entity("StadtLandFussApi.Persistence.Entities.ToDo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Key")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)")
                        .HasColumnName("key");

                    b.HasKey("Id")
                        .HasName("pk_to_do");

                    b.ToTable("to_do", (string)null);
                });

            modelBuilder.Entity("StadtLandFussApi.Models.Answer", b =>
                {
                    b.HasOne("StadtLandFussApi.Models.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_answers_categories_category_id");

                    b.HasOne("StadtLandFussApi.Models.User", null)
                        .WithMany("Answers")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_answers_users_user_id");

                    b.Navigation("Category");
                });

            modelBuilder.Entity("StadtLandFussApi.Models.Category", b =>
                {
                    b.HasOne("StadtLandFussApi.Models.Lobby", null)
                        .WithMany("Categories")
                        .HasForeignKey("LobbyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_categories_lobbies_lobby_id");
                });

            modelBuilder.Entity("StadtLandFussApi.Models.User", b =>
                {
                    b.HasOne("StadtLandFussApi.Models.Lobby", null)
                        .WithMany("Users")
                        .HasForeignKey("LobbyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_users_lobbies_lobby_id");
                });

            modelBuilder.Entity("StadtLandFussApi.Models.Lobby", b =>
                {
                    b.Navigation("Categories");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("StadtLandFussApi.Models.User", b =>
                {
                    b.Navigation("Answers");
                });
#pragma warning restore 612, 618
        }
    }
}
